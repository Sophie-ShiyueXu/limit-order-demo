import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { BytesMemory, BytesMemoryInterface } from "../../../contracts/libraries/BytesMemory";
type BytesMemoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BytesMemory__factory extends ContractFactory {
    constructor(...args: BytesMemoryConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<BytesMemory & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): BytesMemory__factory;
    static readonly bytecode = "0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212208d9aa042252606f6917810907fe1ffed4a04578c7ead60f4408b176ce80dd1a664736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "OutOfBounds";
        readonly type: "error";
    }];
    static createInterface(): BytesMemoryInterface;
    static connect(address: string, runner?: ContractRunner | null): BytesMemory;
}
export {};
