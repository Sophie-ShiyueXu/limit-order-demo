"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevertReasonParserTest__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "TestDidNotThrow",
        type: "error",
    },
    {
        inputs: [],
        name: "assertion",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "emptyRevert",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "emptyStringRevert",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "longStringRevert",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "nonEmptyRevert",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "testAssertion",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testEmptyRevert",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testEmptyStringRevert",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testLongStringRevert",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testNonEmptyRevert",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testParseWithThrow",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "testWithThrow",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "withoutAssertion",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608080604052346015576114a2908161001a8239f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f925f3560e01c90816325ebc41514610c0a57508063287bc8ee14610b025780632a6233d614610aa7578063377f9a39146109ea57806340a723861461096557806355e23ad51461088e5780636db656191461085c5780637737a51a146106dd57806393a1d701146106ad578063b9d6be5e14610622578063cd1f45fd146103f1578063d5de7366146103265763ed4daedc146100af575f80fd5b3461032257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103225781516100e881610ce6565b600b81526020928382017f556e6b6e6f776e283078290000000000000000000000000000000000000000008152303b1561031e578151917f6db656190000000000000000000000000000000000000000000000000000000083525f925f818781305afa908161030b575b506102e357610176610162610d7c565b82519061016e82610cca565b858252610dd9565b9161026a603b83518981019061019f8b828b518089875e81018b83820152038084520182610d02565b519020928451938a85018751956101cb8d82818c0199808b875e81018d83820152038084520182610d02565b519020149385519687928c84019a7f4578706563746564207b200000000000000000000000000000000000000000008c52518091602b86015e8301907f207d2c2062757420676f74207b20000000000000000000000000000000000000602b830152518092603983015e017f207d000000000000000000000000000000000000000000000000000000000000603982015203601b810186520184610d02565b15610273578680f35b927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9260449695519788967f08c379a00000000000000000000000000000000000000000000000000000000088528701525180928160248801528787015e85828601015201168101030190fd5b8490517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b610316919450610c6d565b5f925f610152565b5f80fd5b8280fd5b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57303b1561031e575f825180927fb9d6be5e00000000000000000000000000000000000000000000000000000000825281305afa90816103de575b506103da576103da906103a0610d7c565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0825101825251906103d282610cca565b838252610dd9565b5080f35b6103e9919350610c6d565b5f915f61038f565b50903461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57610429610d43565b91303b1561031e578151917f93a1d7010000000000000000000000000000000000000000000000000000000083525f925f818481305afa908161060f575b506105e957610477610162610d7c565b9080519482610574603b6020988981018551916104aa8c828d828b01968088885e82019083820152038084520182610d02565b5190208987516104d58d8281810194828b519b019a808c885e82019083820152038084520182610d02565b519020149386519788928c8401977f4578706563746564207b200000000000000000000000000000000000000000008952518091602b86015e8301907f207d2c2062757420676f74207b20000000000000000000000000000000000000602b830152518092603983015e017f207d000000000000000000000000000000000000000000000000000000000000603982015203601b810187520185610d02565b1561057b57005b6044947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093601f93519788967f08c379a00000000000000000000000000000000000000000000000000000000088528701525180928160248801528787015e85828601015201168101030190fd5b517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b61061a919450610c6d565b5f9285610467565b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600660248201527f726561736f6e00000000000000000000000000000000000000000000000000006044820152fd5b3461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57005b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e5781519061071882610cae565b60498252602092838301927f50616e696328307830303030303030303030303030303030303030303030303084527f3030303030303030303030303030303030303030303030303030303030303030828201527f30303030303030312900000000000000000000000000000000000000000000006060820152303b1561031e578151937f2a6233d60000000000000000000000000000000000000000000000000000000085525f945f818681305afa9081610849575b506108215790603b92916105746107fa6107e6610d7c565b8551906107f282610cca565b898252610dd9565b94859285518a8101906104aa8c828d8a518088885e82019083820152038084520182610d02565b5050517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b610854919650610c6d565b5f94876107ce565b3461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e575f80fd5b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57602060a49251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152605260248201527f56657279206c6f6e67207465787420746f207465737420666f7220726576657260448201527f747320746861742072657475726e20737472696e67206f66206d6f726520746860648201527f616e203332206279746573206c656e67746800000000000000000000000000006084820152fd5b50903461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e5761099d610d43565b91303b1561031e578151917fb9d6be5e0000000000000000000000000000000000000000000000000000000083525f925f818481305afa908161060f57506105e957610477610162610d7c565b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57815190610a2582610ce6565b60078252602092838301927f4572726f722829000000000000000000000000000000000000000000000000008452303b1561031e578151937f25ebc4150000000000000000000000000000000000000000000000000000000085525f945f818681305afa908161084957506108215790603b92916105746107fa6107e6610d7c565b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e576001907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e57815190610b3d82610cae565b60598252602092838301927f4572726f722856657279206c6f6e67207465787420746f207465737420666f7284527f207265766572747320746861742072657475726e20737472696e67206f66206d828201527f6f7265207468616e203332206279746573206c656e67746829000000000000006060820152303b1561031e578151937f55e23ad50000000000000000000000000000000000000000000000000000000085525f945f818681305afa908161084957506108215790603b92916105746107fa6107e6610d7c565b90503461031e575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031e5760206044927f08c379a00000000000000000000000000000000000000000000000000000000083528201525f6024820152fd5b67ffffffffffffffff8111610c8157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6080810190811067ffffffffffffffff821117610c8157604052565b6020810190811067ffffffffffffffff821117610c8157604052565b6040810190811067ffffffffffffffff821117610c8157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c8157604052565b60405190610d5082610ce6565b600d82527f4572726f7228726561736f6e29000000000000000000000000000000000000006020830152565b3d15610dd4573d9067ffffffffffffffff8211610c815760405191610dc960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610d02565b82523d5f602084013e565b606090565b80515f600482101561108d575b7fffffffff00000000000000000000000000000000000000000000000000000000167f08c379a000000000000000000000000000000000000000000000000000000000811480611082575b15610f93575050906044820191805192805160440180604411610f66576020941015610ee35750610ee09183610e68602993611098565b6040519583879451918291018486015e8301907f556e6b6e6f776e2800000000000000000000000000000000000000000000000083830152805192839101602883015e017f29000000000000000000000000000000000000000000000000000000000000006028820152036009810184520182610d02565b90565b916064610ee093602793604051968488955191829101602087015e8401917f4572726f7228000000000000000000000000000000000000000000000000000060208401525192839101602683015e017f29000000000000000000000000000000000000000000000000000000000000006026820152036007810184520182610d02565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b7100000000000000000000000000000000000000000000000000000000149081611077575b50610fd357602960209283610e68610ee094611098565b60276024610ee09201519260405193610fff602095869283820152828152610ffa81610ce6565b611098565b6040519583879451918291018486015e8301907f50616e696328000000000000000000000000000000000000000000000000000083830152805192839101602683015e017f29000000000000000000000000000000000000000000000000000000000000006026820152036007810184520182610d02565b60249150145f610fbc565b506044821015610e31565b506020820151610de6565b9060408051928051918260011b91600260228701936022818901016040526130788289015201865260208094818301920101925b8382106110da575050505050565b82859161145f84516112a0817f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b835260801b7f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b83820152019101906110cc56fea264697066735822122024f61c754e525a7e93359b8f93b1088260195cd36442c9d0514b694e774157b664736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class RevertReasonParserTest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.RevertReasonParserTest__factory = RevertReasonParserTest__factory;
RevertReasonParserTest__factory.bytecode = _bytecode;
RevertReasonParserTest__factory.abi = _abi;
//# sourceMappingURL=RevertReasonParserTest__factory.js.map