import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20ThroughZeroApprove, ERC20ThroughZeroApproveInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/ERC20ThroughZeroApprove";
type ERC20ThroughZeroApproveConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20ThroughZeroApprove__factory extends ContractFactory {
    constructor(...args: ERC20ThroughZeroApproveConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20ThroughZeroApprove & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20ThroughZeroApprove__factory;
    static readonly bytecode = "0x608080604052346015576102c8908161001a8239f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c908163095ea7b3146100c85750806380b5e133146100c3578063bbf72f3d146100c35763dd62ed3e1461004a575f80fd5b346100bf57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf57610080610202565b9060243573ffffffffffffffffffffffffffffffffffffffff8082168092036100bf57602093165f525f8352815f20905f528252805f20549051908152f35b5f80fd5b610225565b82346100bf57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf576100ff610202565b60243592335f525f60205273ffffffffffffffffffffffffffffffffffffffff835f20921691825f52602052825f20541515806101f9575b6101d1575060015460ff8160081c166101a85760ff8116806101a0575b610171575b50335f525f602052815f20905f526020525f20555f80f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001760015583610159565b508315610154565b600483517f14ca8d1e000000000000000000000000000000000000000000000000000000008152fd5b807f14ca8d1e0000000000000000000000000000000000000000000000000000000060049252fd5b50831515610137565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100bf57565b346100bf5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf576004358015158091036100bf5760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600154169116176001555f80f3fea264697066735822122094f3904605bff6a16c1bb327f3d661f0b3d06557b0903710c1b8a42987c503f764736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "NonZeroToNonZeroApprove";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "fail";
            readonly type: "bool";
        }];
        readonly name: "setFailAfterZeroReset";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "fail";
            readonly type: "bool";
        }];
        readonly name: "setFailFlag";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ERC20ThroughZeroApproveInterface;
    static connect(address: string, runner?: ContractRunner | null): ERC20ThroughZeroApprove;
}
export {};
