import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { Create3Mock, Create3MockInterface } from "../../../../contracts/tests/mocks/Create3Mock";
type Create3MockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Create3Mock__factory extends ContractFactory {
    constructor(...args: Create3MockConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<Create3Mock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): Create3Mock__factory;
    static readonly bytecode = "0x6080806040523460155761051a908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063bb34534c146100de5763cdcb760a1461002f575f80fd5b346100da5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100da5760243567ffffffffffffffff8082116100da57366023830112156100da5781600401359081116100da5736602482840101116100da576100a76100af9160246100d69401610201565b6004356103f8565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b5f80fd5b346100da5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100da57602061011a600435610236565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761018157604052565b610138565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018157604052565b67ffffffffffffffff811161018157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9061020b816101c7565b916102196040519384610186565b81835236828201116100da57815f92602092838601378301015290565b6040519060208201907fff0000000000000000000000000000000000000000000000000000000000000082523060601b602184015260358301527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f605583015260558252608082019180831067ffffffffffffffff84111761018157827f010000000000000000000000000000000000000000000000000000000000000060b66103639461037c9660405284519020937fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060a08201957fd694000000000000000000000000000000000000000000000000000000000000875260601b1660a282015201526017815261034781610165565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b90565b604051906040820182811067ffffffffffffffff82111761018157604052601082527f67363d3d37363d34f03d5260086018f3000000000000000000000000000000006020830152565b3d156103f3573d906103da826101c7565b916103e86040519384610186565b82523d5f602084013e565b606090565b919061040261037f565b9261040c81610236565b93843b6104ba576020815191015ff573ffffffffffffffffffffffffffffffffffffffff81161561049057815f92918360208194519301915af161044e6103c9565b50158015610487575b61045d57565b60046040517f53de54b9000000000000000000000000000000000000000000000000000000008152fd5b50813b15610457565b60046040517fbbd2fe87000000000000000000000000000000000000000000000000000000008152fd5b60046040517fcd43efa1000000000000000000000000000000000000000000000000000000008152fdfea264697066735822122024d5ab2db26034059d4b0c11ec10761b28d49093b980ad58857a79d08158202664736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ErrorCreatingContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ErrorCreatingProxy";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }];
        readonly name: "addressOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "code";
            readonly type: "bytes";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): Create3MockInterface;
    static connect(address: string, runner?: ContractRunner | null): Create3Mock;
}
export {};
