"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WethReceiverMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "weth",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "EthDepositRejected",
        type: "error",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60a034606457601f61012738819003918201601f19168301916001600160401b03831184841017606857808492602094604052833981010312606457516001600160a01b038116810360645760805260405160aa908161007d82396080518160250152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040523615600e575f80fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303604c57005b807f1b10b0f90000000000000000000000000000000000000000000000000000000060049252fdfea2646970667358221220fcf920602ed33427439a7631bbe35f698ab2182ecad428d71d51d8cfd54c731364736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class WethReceiverMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(weth, overrides) {
        return super.getDeployTransaction(weth, overrides || {});
    }
    deploy(weth, overrides) {
        return super.deploy(weth, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.WethReceiverMock__factory = WethReceiverMock__factory;
WethReceiverMock__factory.bytecode = _bytecode;
WethReceiverMock__factory.abi = _abi;
//# sourceMappingURL=WethReceiverMock__factory.js.map