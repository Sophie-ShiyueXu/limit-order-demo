import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { AddressArrayMock, AddressArrayMockInterface } from "../../../../contracts/tests/mocks/AddressArrayMock";
type AddressArrayMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AddressArrayMock__factory extends ContractFactory {
    constructor(...args: AddressArrayMockConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<AddressArrayMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): AddressArrayMock__factory;
    static readonly bytecode = "0x608080604052346015576107ae908161001a8239f35b5f80fdfe6080604081815260049182361015610015575f80fd5b5f3560e01c908162f6b2b2146106a95781631f7b6d3214610669575080632f30c6f6146105a55780636d4ce63c146104f357806389b09de714610426578063a4ece52c14610368578063ae35ad7314610181578063e0886f901461011b5763ec2fd5a114610081575f80fd5b346101175760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117578135916401000000008310156100f0575073ffffffffffffffffffffffffffffffffffffffff6100e1602093610739565b92905490519260031b1c168152f35b90517f4e23d035000000000000000000000000000000000000000000000000000000008152fd5b5f80fd5b50346101175760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117578135918263ffffffff5f5460a01c1611156100f0575073ffffffffffffffffffffffffffffffffffffffff6100e1602093610739565b5034610117576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101175767ffffffffffffffff83358181116101175736602382011215610117578085013582811161033c576005918160051b918651947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f850116860190868210908211176103105787528452848401602481938301019136831161011757602401905b8282106102e4575050505f549063ffffffff8260a01c169173ffffffffffffffffffffffffffffffffffffffff97855184116102be575082610299575b8651878152806102958888610288848d01826106f0565b91848303908501526106f0565b0390f35b8716905260019160015b82811015610271578054881681831b860187015283016102a3565b7ff9a99b25000000000000000000000000000000000000000000000000000000005f525ffd5b813573ffffffffffffffffffffffffffffffffffffffff81168103610117578152908601908601610234565b6041897f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6041867f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b8234610117575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117575f549063ffffffff8260a01c1690815f1461040057506001146103da577fffffffffffffffffffffffff0000000000000000000000000000000000000000015f55005b507f80000000000000000000000000000000000000000000000000000000000000005f55005b7f06a2af9e000000000000000000000000000000000000000000000000000000005f525ffd5b5090346101175760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117573573ffffffffffffffffffffffffffffffffffffffff811681036101175760016020925f5463ffffffff8160a01c1693845f146104d457740100000000000000000000000000000000000000007f800000000000000000000000000000000000000000000000000000000000000092015f551783555b5191018152f35b74010000000000000000000000000000000000000000175f55506104cd565b5034610117575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117575f549063ffffffff8260a01c169073ffffffffffffffffffffffffffffffffffffffff918151926001946005918360010160051b8601855283808752610578575b845160208082528190610295908201896106f0565b8060209216602087015260015b8481106105925750610563565b8054821681851b88018401528701610585565b5034610117577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610117578035906024359073ffffffffffffffffffffffffffffffffffffffff8083168303610117575f549163ffffffff8360a01c168510156106435750831561063b5750507f8000000000000000000000000000000000000000000000000000000000000000179055005b811618175f55005b7f4e23d035000000000000000000000000000000000000000000000000000000005f525ffd5b34610117575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101175760209063ffffffff5f5460a01c168152f35b34610117575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101175773ffffffffffffffffffffffffffffffffffffffff5f55005b9081518082526020808093019301915f5b82811061070f575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101610701565b64010000000081101561074b57905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220212156597dc7fa00c7df16366f697ca556290781b20ec037c41698fefc0374de64736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "IndexOutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "PopFromEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "i";
            readonly type: "uint256";
        }];
        readonly name: "at";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "erase";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "get";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "arr";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "providedArr";
            readonly type: "address[]";
        }];
        readonly name: "getAndProvideArr";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "length";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pop";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "push";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "set";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "i";
            readonly type: "uint256";
        }];
        readonly name: "unsafeAt";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): AddressArrayMockInterface;
    static connect(address: string, runner?: ContractRunner | null): AddressArrayMock;
}
export {};
