import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { RevertReasonForwarderMock, RevertReasonForwarderMockInterface } from "../../../../../contracts/tests/mocks/RevertReasonForwarderMock.sol/RevertReasonForwarderMock";
type RevertReasonForwarderMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RevertReasonForwarderMock__factory extends ContractFactory {
    constructor(...args: RevertReasonForwarderMockConstructorParams);
    getDeployTransaction(helper: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(helper: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<RevertReasonForwarderMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): RevertReasonForwarderMock__factory;
    static readonly bytecode = "0x608034606f57601f61035c38819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b0319169190911790556040516102d490816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6040608081526004361015610012575f80fd5b5f3560e01c8063bcb87cf8146100cd5763fd3785a514610030575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c9575f8073ffffffffffffffffffffffffffffffffffffffff815416835160208101907f5b2dd100000000000000000000000000000000000000000000000000000000008252600481526100aa8161014c565b519134905af16100b8610195565b50156100c057005b513d5f823e3d90fd5b5f80fd5b505f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c9576020906101026101fd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f835194859381855280519182918282880152018686015e5f85828601015201168101030190f35b6040810190811067ffffffffffffffff82111761016857604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b3d156101f85767ffffffffffffffff903d8281116101685760405192601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168401908111848210176101685760405282523d5f602084013e565b606090565b5f8073ffffffffffffffffffffffffffffffffffffffff81541660405160208101907f5b2dd1000000000000000000000000000000000000000000000000000000000082526004815261024f8161014c565b519134905af161025d610195565b5015610286576040516020810181811067ffffffffffffffff821117610168576040525f815290565b60405160203d808352805f8385013e8201016040529056fea264697066735822122021e8cc9a701011f35f78b2360610355116ff6ffe1f3b3c004df5de6e511d6e6264736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "helper";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "reReason";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "reRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): RevertReasonForwarderMockInterface;
    static connect(address: string, runner?: ContractRunner | null): RevertReasonForwarderMock;
}
export {};
