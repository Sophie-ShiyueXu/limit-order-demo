"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermitableMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "permit",
                type: "bytes",
            },
        ],
        name: "mockPermit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "permit",
                type: "bytes",
            },
        ],
        name: "mockPermitCompact",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608080604052346015576104da908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806352d852c11461002f5763c2c3b4561461002f575f80fd5b3461005c5761004a61004036610060565b91309033906100e8565b1561005157005b6040513d5f823e3d90fd5b5f80fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261005c5760043573ffffffffffffffffffffffffffffffffffffffff8116810361005c579160243567ffffffffffffffff9283821161005c578060238301121561005c57816004013593841161005c576024848301011161005c576024019190565b9190935f9493859446806101441461048d578061012c1461048d5761010414610477576e22d473030f116ddee9f6b43ac78ba3905b604051948491826064146103c25782604814610301578260e0146102c757826101001461028b57826060146101c55750506101601461018b57508185926004927f9fd5a6cf0000000000000000000000000000000000000000000000000000000086528386013701925af190565b906101649450859250610160907f2b67b57000000000000000000000000000000000000000000000000000000000855260048501375af190565b88955060409250906101649760209495927f2b67b5700000000000000000000000000000000000000000000000000000000089526004890152602488015260148260508901377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9181601485013560e01c01831660648a0152601884013560e01c60848a015260a4890152601c83013560e01c011660c487015261010060e48701528161010487015282808201610124880137016101448501375af190565b5050505084915092610100610104947f8fcbaf0c00000000000000000000000000000000000000000000000000000000855260048501375af190565b505050508491509260e060e4947fd505accf00000000000000000000000000000000000000000000000000000000855260048501375af190565b8895507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9350610104979492507f8fcbaf0c0000000000000000000000000000000000000000000000000000000087526004870152602486015260206008602883013592803560e01c60448901527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600482013560e01c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af190565b8895507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff935060e4979492507fd505accf0000000000000000000000000000000000000000000000000000000087526004870152602486015260206024604483013592828160448a01377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8382013560e01c0160648901528360ff1c601b0160848901520160a48701371660c48401525af190565b6e225e31d15943971f47ad3022f714fa9061011d565b506e225e31d15943971f47ad3022f714fa9061011d56fea2646970667358221220ff2160473d8e6cfa7fb764ce5f56f13534737077b246b63f503200cd608a114a64736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class PermitableMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.PermitableMock__factory = PermitableMock__factory;
PermitableMock__factory.bytecode = _bytecode;
PermitableMock__factory.abi = _abi;
//# sourceMappingURL=PermitableMock__factory.js.map