"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20ThroughZeroApprove__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "NonZeroToNonZeroApprove",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "fail",
                type: "bool",
            },
        ],
        name: "setFailAfterZeroReset",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "fail",
                type: "bool",
            },
        ],
        name: "setFailFlag",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608080604052346015576102c8908161001a8239f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c908163095ea7b3146100c85750806380b5e133146100c3578063bbf72f3d146100c35763dd62ed3e1461004a575f80fd5b346100bf57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf57610080610202565b9060243573ffffffffffffffffffffffffffffffffffffffff8082168092036100bf57602093165f525f8352815f20905f528252805f20549051908152f35b5f80fd5b610225565b82346100bf57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf576100ff610202565b60243592335f525f60205273ffffffffffffffffffffffffffffffffffffffff835f20921691825f52602052825f20541515806101f9575b6101d1575060015460ff8160081c166101a85760ff8116806101a0575b610171575b50335f525f602052815f20905f526020525f20555f80f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001760015583610159565b508315610154565b600483517f14ca8d1e000000000000000000000000000000000000000000000000000000008152fd5b807f14ca8d1e0000000000000000000000000000000000000000000000000000000060049252fd5b50831515610137565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100bf57565b346100bf5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bf576004358015158091036100bf5760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600154169116176001555f80f3fea264697066735822122094f3904605bff6a16c1bb327f3d661f0b3d06557b0903710c1b8a42987c503f764736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20ThroughZeroApprove__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC20ThroughZeroApprove__factory = ERC20ThroughZeroApprove__factory;
ERC20ThroughZeroApprove__factory.bytecode = _bytecode;
ERC20ThroughZeroApprove__factory.abi = _abi;
//# sourceMappingURL=ERC20ThroughZeroApprove__factory.js.map