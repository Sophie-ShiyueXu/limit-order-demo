"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermitAndCallMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [],
        name: "FooCalled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "MsgValue",
        type: "event",
    },
    {
        inputs: [],
        name: "foo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "payableFoo",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "permit",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "action",
                type: "bytes",
            },
        ],
        name: "permitAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x60808060405234601557610640908161001a8239f35b5f80fdfe60808060405260049081361015610014575f80fd5b60e0915f35831c9283635816d723146100f0575050508063c29855781461009c5763d161706714610043575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610098577fa143729f1e064742494ee223fd9347d2eb1ea559fcad61e62d2568b526a7a6866020604051348152a1005b5f80fd5b34610098575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610098577fac43e28cd59e04fe2babb4a4ca6294dda7f889b2c5352db2088b5618e57d8cf65f80a1005b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100985767ffffffffffffffff9180358381116100985761013a90369083016105dc565b936024359081116100985761015290369084016105dc565b92909582357fffffffffffffffffffffffffffffffffffffffff00000000000000000000000080821691601489106105c7575b505060601c9086601411610098575f968796858896956014889701917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec8501934680610144146105b0578061012c146105b0576101041461059a576e22d473030f116ddee9f6b43ac78ba3915b8591826064146104de5782604814610418578260e0146103dc57826101001461039c57826060146102d3575050610160146102965750918693917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0937f9fd5a6cf00000000000000000000000000000000000000000000000000000000875286013701925af1505b8060405194853783305af43d5f833e15610292573d90f35b3d90fd5b9250610164955086935090610160917f2b67b5700000000000000000000000000000000000000000000000000000000086528501375af15061027a565b91509194508895506014602094610164996054957f2b67b570000000000000000000000000000000000000000000000000000000008b5233908b015260248a015260508901377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff91816028850135821c01831660648a0152602c840135811c60848a01523060a48a01526030840135901c011660c487015261010060e487015260406101048701528260348201610124880137016101448501375af15061027a565b5050505086935061010495925090610100917f8fcbaf0c0000000000000000000000000000000000000000000000000000000086528501375af15061027a565b94939250505087945060e49693507fd505accf0000000000000000000000000000000000000000000000000000000086528501375af15061027a565b8a975061010499965060209350601c92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96957f8fcbaf0c000000000000000000000000000000000000000000000000000000008b5233908b01523060248b0152603c8301359535811c60448b01526018830135901c016064890152600160848901528360ff1c601b0160a48901520160c48701371660e48401525af15061027a565b8a975060e499965060209350603892507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96957fd505accf000000000000000000000000000000000000000000000000000000008b5233908b01523060248b01528460588401359660448c01376034830135901c0160648901528360ff1c601b0160848901520160a48701371660c48401525af15061027a565b6e225e31d15943971f47ad3022f714fa916101f2565b506e225e31d15943971f47ad3022f714fa916101f2565b908092508860140360031b1b16168880610185565b9181601f840112156100985782359167ffffffffffffffff831161009857602083818601950101116100985756fea2646970667358221220032b9b77afd66d631b841e2f774ca0ba4b96f020ac8d0be932f94c87c8076a3164736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class PermitAndCallMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.PermitAndCallMock__factory = PermitAndCallMock__factory;
PermitAndCallMock__factory.bytecode = _bytecode;
PermitAndCallMock__factory.abi = _abi;
//# sourceMappingURL=PermitAndCallMock__factory.js.map