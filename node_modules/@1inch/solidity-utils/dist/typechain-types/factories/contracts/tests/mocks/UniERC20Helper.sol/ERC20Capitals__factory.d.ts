import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20Capitals, ERC20CapitalsInterface } from "../../../../../contracts/tests/mocks/UniERC20Helper.sol/ERC20Capitals";
type ERC20CapitalsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20Capitals__factory extends ContractFactory {
    constructor(...args: ERC20CapitalsConstructorParams);
    getDeployTransaction(name: string, symbol: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(name: string, symbol: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20Capitals & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20Capitals__factory;
    static readonly bytecode = "0x6080604052346102bc5761071a80380380610019816102c0565b9283398101906040818303126102bc5780516001600160401b03908181116102bc57836100479184016102e5565b91602093848201518381116102bc5761006092016102e5565b928251908282116101e6575f54916001948584811c941680156102b2575b838510146101c8578190601f94858111610264575b508390858311600114610205575f926101fa575b50505f19600383901b1c191690851b175f555b84519283116101e65783548481811c911680156101dc575b828210146101c857828111610185575b508091831160011461012657508192935f9261011b575b50505f19600383901b1c191690821b1790555b6040516103e390816103378239f35b015190505f806100f9565b90601f19831694845f52825f20925f905b87821061016e57505083859610610156575b505050811b01905561010c565b01515f1960f88460031b161c191690555f8080610149565b808785968294968601518155019501930190610137565b845f52815f208380860160051c8201928487106101bf575b0160051c019085905b8281106101b45750506100e2565b5f81550185906101a6565b9250819261019d565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100d2565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100a7565b90879350601f198316915f8052855f20925f5b8782821061024e5750508411610236575b505050811b015f556100ba565b01515f1960f88460031b161c191690555f8080610229565b8385015186558b97909501949384019301610218565b9091505f8052835f208580850160051c8201928686106102a9575b918991869594930160051c01915b82811061029b575050610093565b5f815585945089910161028d565b9250819261027f565b93607f169361007e565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101e657604052565b81601f820112156102bc578051906001600160401b0382116101e657610314601f8301601f19166020016102c0565b92828452602083830101116102bc57815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c908163a3f4df7e1461022d575063f76f8d7814610032575f80fd5b34610229575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610229576040515f6001906001548060011c6001821693841561021f575b60209283831086146101f2578287528695908115610197575060011461011a575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019067ffffffffffffffff8211818310176100ed576100e982918260405282610365565b0390f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b60015f908152929493507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061018157505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9282010191819361009b565b8054878501870152869450928501928101610146565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061009b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b90607f169061007a565b5f80fd5b34610229575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610229575f8054906001918060011c6001821693841561035b575b60209283831086146101f257828752869590811561019757506001146102e05750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681019067ffffffffffffffff8211818310176100ed576100e982918260405282610365565b5f808052929493507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061034557505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9282010191819361009b565b805487850187015286945092850192810161030a565b90607f1690610272565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f858286010152011601019056fea2646970667358221220611cadd082efc1fe2e5dc2121c03c59123ad11c6566131dde7694b3bb99c4acc64736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "NAME";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "SYMBOL";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ERC20CapitalsInterface;
    static connect(address: string, runner?: ContractRunner | null): ERC20Capitals;
}
export {};
