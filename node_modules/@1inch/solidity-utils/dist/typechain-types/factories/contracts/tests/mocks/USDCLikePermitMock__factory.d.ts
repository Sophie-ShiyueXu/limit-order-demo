import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../../common";
import type { USDCLikePermitMock, USDCLikePermitMockInterface } from "../../../../contracts/tests/mocks/USDCLikePermitMock";
type USDCLikePermitMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class USDCLikePermitMock__factory extends ContractFactory {
    constructor(...args: USDCLikePermitMockConstructorParams);
    getDeployTransaction(name: string, symbol: string, initialAccount: AddressLike, initialBalance: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(name: string, symbol: string, initialAccount: AddressLike, initialBalance: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<USDCLikePermitMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): USDCLikePermitMock__factory;
    static readonly bytecode = "0x6101606040818152611e0d80380380916100198286610475565b84398201916080818403126104715780516001600160401b0392908381116104715784610047918401610498565b91602094858201519085821161047157610062918301610498565b8183015190956001600160a01b03821692909183900361047157606001518351968488018881108882111761038757855260019687895283890197603160f81b895287518281116103875760038054918383811c93168015610467575b8884101461045357601f92838111610410575b5080888482116001146103a6575f9161039b575b505f1982841b1c191690841b1781555b8451918483116103875760049586548581811c9116801561037d575b8a82101461036a57828111610327575b50889184116001146102c5579383949184925f956102ba575b50501b925f19911b1c19161782555b610153876104ed565b976101209889526101638a610672565b97610140988952858151910120998a60e05251902061010099818b524660a052875191868301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528984015260608301524660808301523060a083015260a0825260c0820192828410908411176102a757828852815190206080523060c05285156102915750506002549082820180921161027e57506002555f8381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a3519161165e93846107af8539608051846110b7015260a05184611183015260c05184611088015260e051846111060152518361112c015251826107af015251816107d90152f35b601190634e487b7160e01b5f525260245ffd5b63ec442f0560e01b82525f60c490910152602490fd5b604184634e487b7160e01b5f525260245ffd5b015193505f8061013b565b9190601f19841692875f52848a5f20945f5b8c8983831061031057505050106102f7575b50505050811b01825561014a565b01519060f8845f19921b161c191690555f8080806102e9565b8686015189559097019694850194889350016102d7565b875f52895f208380870160051c8201928c8810610361575b0160051c019086905b828110610356575050610122565b5f8155018690610348565b9250819261033f565b602288634e487b7160e01b5f525260245ffd5b90607f1690610112565b634e487b7160e01b5f52604160045260245ffd5b90508b01515f6100e6565b8592508c90601f198316855f528b5f20928c5f915b8383106103ef5750505083116103d8575b5050811b0181556100f6565b8d01515f1983861b60f8161c191690555f806103cc565b948482949597989293960151815501940192019087949392918f8d906103bb565b825f52885f208480840160051c8201928b851061044a575b0160051c019085905b82811061043f5750506100d2565b5f8155018590610431565b92508192610428565b634e487b7160e01b5f52602260045260245ffd5b92607f16926100bf565b5f80fd5b601f909101601f19168101906001600160401b0382119082101761038757604052565b81601f82011215610471578051906001600160401b03821161038757604051926104cc601f8401601f191660200185610475565b8284526020838301011161047157815f9260208093018386015e8301015290565b80516020919082811015610565575090601f825111610527578082519201519080831061051957501790565b825f19910360031b1b161790565b60448260405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b038111610387576005928354926001938481811c91168015610668575b8382101461045357601f8111610637575b5081601f84116001146105d557509282939183925f946105ca575b50501b915f199060031b1c191617905560ff90565b015192505f806105b5565b919083601f198116875f52845f20945f905b8883831061061d5750505010610605575b505050811b01905560ff90565b01515f1960f88460031b161c191690555f80806105f8565b8587015188559096019594850194879350908101906105e7565b855f5284601f845f209201871c820191601f8601881c015b82811061065d57505061059a565b5f815501859061064f565b90607f1690610589565b80516020908181101561069c5750601f825111610527578082519201519080831061051957501790565b906001600160401b03821161038757600654926001938481811c911680156107a4575b8382101461045357601f8111610770575b5081601f841160011461070c57509282939183925f94610701575b50501b915f199060031b1c19161760065560ff90565b015192505f806106eb565b919083601f19811660065f52845f20945f905b88838310610756575050501061073e575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610730565b85870151885590960195948501948793509081019061071f565b60065f5284601f845f20920160051c820191601f860160051c015b8281106107995750506106d0565b5f815501859061078b565b90607f16906106bf56fe6080604090808252600480361015610015575f80fd5b5f3560e01c91826306fdde0314610c8b57508163095ea7b314610c4457816318160ddd14610c0857816323b872dd14610a8057816330adf81f14610a28578163313ce567146109ef5781633644e515146109ae57816370a082311461094d5781637ecebe00146108eb57816384b0196e1461077a57816395d89b41146106525781639fd5a6cf14610375578163a9059cbb14610327578163d505accf1461013d575063dd62ed3e146100c5575f80fd5b3461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020906100fe610dd9565b610106610dfc565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b5f80fd5b9050346101395760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957610176610dd9565b61017e610dfc565b906044359260643560843560ff81168103610139578142116102f8576102969161024961028d926102756101d98873ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2080549060018201905590565b8b517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96020820190815273ffffffffffffffffffffffffffffffffffffffff808c1660408401528c166060830152608082018d905260a082019290925260c08101959095529392839060e0820190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283610e68565b61028860c4359360a435935190206111a9565b6114a9565b90929192611543565b73ffffffffffffffffffffffffffffffffffffffff80841691168181036102c4576102c28686866111ea565b005b604493508651927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b602483838951917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b823461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209061036e610364610dd9565b6024359033610f34565b5160018152f35b82346101395760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576103ad610dd9565b6103b5610dfc565b90604435926064356084359067ffffffffffffffff821161013957366023830112156101395781870135906103e982610ea9565b916103f685519384610e68565b808352602093366024838301011161013957815f92602487930183870137840101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81141580610649575b610621575f879261052a87896104f085966104848473ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2080549060018201905590565b8b51998a948c8601968791959493909260a09360c08401977f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9855273ffffffffffffffffffffffffffffffffffffffff8092166020860152166040840152606083015260808201520152565b03956105227fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe097888101835282610e68565b5190206111a9565b9361057f87519182610573898201957f1626ba7e00000000000000000000000000000000000000000000000000000000998a885260248401528b60448401526064830190610d96565b03908101835282610e68565b5190875afa913d1561061a573d61059581610ea9565b906105a286519283610e68565b81523d5f8383013e5b8361060d575b836105f2575b505050156105ca57506102c293506111ea565b8490517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b908092935081805181010312610139570151148680806105b7565b92508083511015926105b1565b60606105ab565b8784517f1a15a3cc000000000000000000000000000000000000000000000000000000008152fd5b50428110610442565b905034610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957815191825f835461069281610ee3565b90818452602095600191876001821691825f146107355750506001146106d9575b5050506106d592916106c6910385610e68565b51928284938452830190610d96565b0390f35b5f90815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061071d57505050820101816106c66106d56106b3565b8054848a018601528895508794909301928101610704565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506106c691506106d590506106b3565b905034610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576107d37f00000000000000000000000000000000000000000000000000000000000000006112b4565b916107fd7f00000000000000000000000000000000000000000000000000000000000000006113ec565b815191602091602084019484861067ffffffffffffffff8711176108bf5750610874826020928761086799989795525f855281519889987f0f000000000000000000000000000000000000000000000000000000000000008a5260e0868b015260e08a0190610d96565b9188830390890152610d96565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b8281106108a857505050500390f35b835185528695509381019392810192600101610899565b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346101395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209073ffffffffffffffffffffffffffffffffffffffff61093b610dd9565b165f5260078252805f20549051908152f35b82346101395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209073ffffffffffffffffffffffffffffffffffffffff61099d610dd9565b165f525f8252805f20549051908152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020906109e8611071565b9051908152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020905160128152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957602090517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b9050346101395760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957610ab9610dd9565b610ac1610dfc565b906044359273ffffffffffffffffffffffffffffffffffffffff8216805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303610b29575b60208761036e888888610f34565b858310610bc3578115610b94573315610b6557505f9081526001602090815286822033835281529086902091859003909155829061036e610b1b565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020906002549051908152f35b823461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209061036e610c81610dd9565b60243590336111ea565b8334610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760035490825f610cc984610ee3565b808352602094600190866001821691825f14610d56575050600114610cfb575b50506106d592916106c6910385610e68565b9085925060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f925b828410610d3e57505050820101816106c6610ce9565b8054848a018601528895508794909301928101610d28565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168682015292151560051b850190920192508391506106c69050610ce9565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361013957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361013957565b6040810190811067ffffffffffffffff821117610e3b57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e3b57604052565b67ffffffffffffffff8111610e3b57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b90600182811c92168015610f2a575b6020831014610efd57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610ef2565b9173ffffffffffffffffffffffffffffffffffffffff808416928315611041571692831561101157825f525f60205260405f205490828210610fb95750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480611180575b156110d9577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610e3b5760405251902090565b507f000000000000000000000000000000000000000000000000000000000000000046146110b0565b6042906111b4611071565b90604051917f19010000000000000000000000000000000000000000000000000000000000008352600283015260228201522090565b73ffffffffffffffffffffffffffffffffffffffff80911691821561128457169182156112545760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60246040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60ff811461130a5760ff811690601f82116112e057604051916112d683610e1f565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b50604051600554815f61131c83610ee3565b808352926020906001908181169081156113a9575060011461134a575b505061134792500382610e68565b90565b91509260055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0935f925b82841061139157506113479450505081016020015f80611339565b85548785018301529485019486945092810192611376565b9050602093506113479592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f80611339565b60ff811461140e5760ff811690601f82116112e057604051916112d683610e1f565b50604051600654815f61142083610ee3565b808352926020906001908181169081156113a9575060011461144a57505061134792500382610e68565b91509260065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f935f925b82841061149157506113479450505081016020015f80611339565b85548785018301529485019486945092810192611476565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611538579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561152d575f5173ffffffffffffffffffffffffffffffffffffffff81161561152357905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b60048110156115fb5780611555575050565b600181036115875760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b600281036115c057602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146115ca5750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea26469706673582212204c8c3f9f519d50a0dc96a347b1e7d57ec92972e52008c1301839a755e2ea2e2364736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "address";
            readonly name: "initialAccount";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "initialBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ECDSAInvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "ECDSAInvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "ECDSAInvalidSignatureS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientAllowance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "approver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidApprover";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }];
        readonly name: "ERC2612ExpiredSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "ERC2612InvalidSigner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentNonce";
            readonly type: "uint256";
        }];
        readonly name: "InvalidAccountNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "PermitExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DOMAIN_SEPARATOR";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERMIT_TYPEHASH";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "nonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): USDCLikePermitMockInterface;
    static connect(address: string, runner?: ContractRunner | null): USDCLikePermitMock;
}
export {};
