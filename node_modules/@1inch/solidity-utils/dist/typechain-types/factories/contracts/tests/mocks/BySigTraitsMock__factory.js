"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BySigTraitsMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "WrongNonceType",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "BySigTraits.Value",
                name: "traits",
                type: "uint256",
            },
        ],
        name: "deadline",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "BySigTraits.Value",
                name: "traits",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "relayer",
                type: "address",
            },
        ],
        name: "isRelayerAllowed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "BySigTraits.Value",
                name: "traits",
                type: "uint256",
            },
        ],
        name: "nonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "BySigTraits.Value",
                name: "traits",
                type: "uint256",
            },
        ],
        name: "nonceType",
        outputs: [
            {
                internalType: "enum BySigTraits.NonceType",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x60808060405234601557610240908161001a8239f35b5f80fdfe608060409080825260049081361015610016575f80fd5b5f3560e01c9081631941c38614610185575080639c7091c6146100df578063c40dc8ec1461009b5763ce03fdab1461004c575f80fd5b346100975760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610097576fffffffffffffffffffffffffffffffff602092519135168152f35b5f80fd5b50346100975760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100975764ffffffffff60209251913560d01c168152f35b5090346100975760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009757813560fe1c906002821161015d576003821015610131576020925051908152f35b6021837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b9050517f5f640821000000000000000000000000000000000000000000000000000000008152fd5b90508234610097577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100975760243573ffffffffffffffffffffffffffffffffffffffff811681036100975760209269ffffffffffffffffffff80913560801c169081159283156101fe575b50505015158152f35b161490508380806101f556fea2646970667358221220f87da6bd7532459cb34570564f79e6d7163e0ba0145c08e19184969f40db38d364736f6c63430008190033";
const isSuperArgs = (xs) => xs.length > 1;
class BySigTraitsMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BySigTraitsMock__factory = BySigTraitsMock__factory;
BySigTraitsMock__factory.bytecode = _bytecode;
BySigTraitsMock__factory.abi = _abi;
//# sourceMappingURL=BySigTraitsMock__factory.js.map