import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20PermitNoRevertMock, ERC20PermitNoRevertMockInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/ERC20PermitNoRevertMock";
type ERC20PermitNoRevertMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20PermitNoRevertMock__factory extends ContractFactory {
    constructor(...args: ERC20PermitNoRevertMockConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20PermitNoRevertMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20PermitNoRevertMock__factory;
    static readonly bytecode = "0x610160604090808252346103e657610016816103ea565b601781526020908181017f45524332305065726d69744e6f5265766572744d6f636b00000000000000000093848252805193610051856103ea565b601785528581860152815195610066876103ea565b601787528187015281519161007a836103ea565b6001808452603160f81b83850190815287516001600160401b0398919291908981116102fd576003908154928484811c941680156103dc575b888510146103c8578190601f9485811161037a575b50889085831160011461031c575f92610311575b50505f1982841b1c191690841b1781555b8a51918a83116102fd5760049b8c548581811c911680156102f3575b898210146102e05782811161029d575b508791841160011461023b579383949184925f95610230575b50501b925f19911b1c19161788555b61014a86610405565b9461012095865261015a8561058a565b96610140978852519020938460e05251902096610100978089524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f86528385015260608401524660808401523060a084015260a0835260c08301968388109088111761021d57508590525190206080523060c0526113d593846106c7853960805184610e6f015260a05184610f3b015260c05184610e40015260e05184610ebe01525183610ee4015251826105730152518161059d0152f35b604190634e487b7160e01b5f525260245ffd5b015193505f80610132565b9190601f198416928d5f5284895f20945f5b8b89838310610286575050501061026d575b50505050811b018855610141565b01519060f8845f19921b161c191690555f80808061025f565b86860151895590970196948501948893500161024d565b8d5f52885f208380870160051c8201928b88106102d7575b0160051c019086905b8281106102cc575050610119565b5f81550186906102be565b925081926102b5565b60228e634e487b7160e01b5f525260245ffd5b90607f1690610109565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100dc565b90869350601f19831691855f528a5f20925f5b8c828210610364575050841161034d575b505050811b0181556100ed565b01515f1983861b60f8161c191690555f8080610340565b8385015186558a9790950194938401930161032f565b909150835f52885f208580850160051c8201928b86106103bf575b918891869594930160051c01915b8281106103b15750506100c8565b5f81558594508891016103a3565b92508192610395565b634e487b7160e01b5f52602260045260245ffd5b93607f16936100b3565b5f80fd5b604081019081106001600160401b038211176102fd57604052565b8051602091908281101561047d575090601f82511161043f578082519201519080831061043157501790565b825f19910360031b1b161790565b60448260405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116102fd576005928354926001938481811c91168015610580575b838210146103c857601f811161054f575b5081601f84116001146104ed57509282939183925f946104e2575b50501b915f199060031b1c191617905560ff90565b015192505f806104cd565b919083601f198116875f52845f20945f905b88838310610535575050501061051d575b505050811b01905560ff90565b01515f1960f88460031b161c191690555f8080610510565b8587015188559096019594850194879350908101906104ff565b855f5284601f845f209201871c820191601f8601881c015b8281106105755750506104b2565b5f8155018590610567565b90607f16906104a1565b8051602090818110156105b45750601f82511161043f578082519201519080831061043157501790565b906001600160401b0382116102fd57600654926001938481811c911680156106bc575b838210146103c857601f8111610688575b5081601f841160011461062457509282939183925f94610619575b50501b915f199060031b1c19161760065560ff90565b015192505f80610603565b919083601f19811660065f52845f20945f905b8883831061066e5750505010610656575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610648565b858701518855909601959485019487935090810190610637565b60065f5284601f845f20920160051c820191601f860160051c015b8281106106b15750506105e8565b5f81550185906106a3565b90607f16906105d756fe6080604081815260049182361015610015575f80fd5b5f925f3560e01c91826306fdde0314610a0357508163095ea7b3146109bc57816318160ddd1461098057816323b872dd146107f8578163313ce567146107bf5781633408e470146107875781633644e5151461074657816370a08231146106e55781637ecebe001461068357816384b0196e1461053e57816395d89b411461041657816396a9fc3114610267578163a9059cbb14610219578163d505accf1461013e575063dd62ed3e146100c7575f80fd5b3461013a57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013a57602091610100610b51565b82610109610b74565b9273ffffffffffffffffffffffffffffffffffffffff8093168152600186522091165f528252805f20549051908152f35b5080fd5b919050346102155761014f36610b97565b949795929093303b156102155760ff938851997f96a9fc31000000000000000000000000000000000000000000000000000000008b5273ffffffffffffffffffffffffffffffffffffffff809216898c01521660248a01526044890152606488015216608486015260a485015260c48401525f8360e48183305af16101d2578380f35b9091925067ffffffffffffffff83116101e9575052005b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b5f80fd5b823461021557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557602090610260610256610b51565b6024359033610cec565b5160018152f35b9050346102155761027736610b97565b908397949796959642116103e75773ffffffffffffffffffffffffffffffffffffffff928984881695865f526007602052815f20908154916001830190558251918860208401947f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98652840152878c1660608401528c608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff8211176103bb578c61036995936103729795936042938352519020610333610e29565b9151917f190100000000000000000000000000000000000000000000000000000000000083526002830152602282015220611220565b909291926112ba565b1681810361038757610385868686610f61565b005b604493508651927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b6041897f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b602485858b51917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b905034610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557815191825f835461045681610c11565b90818452602095600191876001821691825f146104f957505060011461049d575b505050610499929161048a910385610cab565b51928284938452830190610b0e565b0390f35b5f90815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104e1575050508201018161048a610499610477565b8054848a0186015288955087949093019281016104c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b8601909301935084925061048a91506104999050610477565b905034610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576105977f000000000000000000000000000000000000000000000000000000000000000061102b565b916105c17f0000000000000000000000000000000000000000000000000000000000000000611163565b815191602091602084019484861067ffffffffffffffff8711176101e95750610638826020928761062b99989795525f855281519889987f0f000000000000000000000000000000000000000000000000000000000000008a5260e0868b015260e08a0190610b0e565b9188830390890152610b0e565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061066c57505050500390f35b83518552869550938101939281019260010161065d565b82346102155760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102155760209073ffffffffffffffffffffffffffffffffffffffff6106d3610b51565b165f5260078252805f20549051908152f35b82346102155760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102155760209073ffffffffffffffffffffffffffffffffffffffff610735610b51565b165f525f8252805f20549051908152f35b8234610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557602090610780610e29565b9051908152f35b8234610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102155760209051468152f35b8234610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576020905160128152f35b9050346102155760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261021557610831610b51565b610839610b74565b906044359273ffffffffffffffffffffffffffffffffffffffff8216805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83036108a1575b602087610260888888610cec565b85831061093b57811561090c5733156108dd57505f90815260016020908152868220338352815290869020918590039091558290610260610893565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b8234610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576020906002549051908152f35b823461021557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610215576020906102606109f9610b51565b6024359033610f61565b8334610215575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102155760035490825f610a4184610c11565b808352602094600190866001821691825f14610ace575050600114610a73575b5050610499929161048a910385610cab565b9085925060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f925b828410610ab6575050508201018161048a610a61565b8054848a018601528895508794909301928101610aa0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168682015292151560051b8501909201925083915061048a9050610a61565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361021557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361021557565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60e09101126102155773ffffffffffffffffffffffffffffffffffffffff906004358281168103610215579160243590811681036102155790604435906064359060843560ff81168103610215579060a4359060c43590565b90600182811c92168015610c58575b6020831014610c2b57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610c20565b6040810190811067ffffffffffffffff821117610c7e57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c7e57604052565b9173ffffffffffffffffffffffffffffffffffffffff808416928315610df95716928315610dc957825f525f60205260405f205490828210610d715750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016301480610f38575b15610e91577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610c7e5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610e68565b73ffffffffffffffffffffffffffffffffffffffff809116918215610ffb5716918215610fcb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60246040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60ff81146110815760ff811690601f8211611057576040519161104d83610c62565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b50604051600554815f61109383610c11565b8083529260209060019081811690811561112057506001146110c1575b50506110be92500382610cab565b90565b91509260055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0935f925b82841061110857506110be9450505081016020015f806110b0565b855487850183015294850194869450928101926110ed565b9050602093506110be9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f806110b0565b60ff81146111855760ff811690601f8211611057576040519161104d83610c62565b50604051600654815f61119783610c11565b8083529260209060019081811690811561112057506001146111c15750506110be92500382610cab565b91509260065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f935f925b82841061120857506110be9450505081016020015f806110b0565b855487850183015294850194869450928101926111ed565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116112af579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156112a4575f5173ffffffffffffffffffffffffffffffffffffffff81161561129a57905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b600481101561137257806112cc575050565b600181036112fe5760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6002810361133757602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146113415750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220e76f65580f476fc492bce6601816d8d48810a649a7c0b41713af05f3ef6e880164736f6c63430008190033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ECDSAInvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "ECDSAInvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "ECDSAInvalidSignatureS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientAllowance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "approver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidApprover";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }];
        readonly name: "ERC2612ExpiredSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "ERC2612InvalidSigner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentNonce";
            readonly type: "uint256";
        }];
        readonly name: "InvalidAccountNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DOMAIN_SEPARATOR";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "nonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permitThatMayRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ERC20PermitNoRevertMockInterface;
    static connect(address: string, runner?: ContractRunner | null): ERC20PermitNoRevertMock;
}
export {};
