/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  StorageAccessible,
  StorageAccessibleInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/common/StorageAccessible";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getStorageAt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "calldataPayload",
        type: "bytes",
      },
    ],
    name: "simulateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610253908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081635624b25b1461003a575063b4faba091461003557600080fd5b61017b565b346100d25760403660031901126100d257602435600581811b92602090600435908415858704841417156100be576100796100748761015f565b610134565b95808752610089601f199161015f565b013660208801375b8481106100aa57604051806100a688826100d5565b0390f35b8181015481851b8701840152600101610091565b634e487b7160e01b81526011600452602490fd5b80fd5b6020808252825181830181905290939260005b82811061010a57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016100e8565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761015a57604052565b61011e565b67ffffffffffffffff811161015a57601f01601f191660200190565b346101f55760403660031901126101f5576004356001600160a01b03811681036101f5576024359067ffffffffffffffff82116101f557366023830112156101f55781600401356101ce6100748261015f565b9281845236602483830101116101f5578160009260246020930183870137840101526101fa565b600080fd5b6000918291602082519201905af46000523d6020523d600060403e60403d016000fdfea2646970667358221220dae52eff9b2d9ac6698c7201f445d166d28118962c535e62d7ea0decd959649a64736f6c63430008170033";

type StorageAccessibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageAccessibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageAccessible__factory extends ContractFactory {
  constructor(...args: StorageAccessibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StorageAccessible & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StorageAccessible__factory {
    return super.connect(runner) as StorageAccessible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageAccessibleInterface {
    return new Interface(_abi) as StorageAccessibleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StorageAccessible {
    return new Contract(address, _abi, runner) as unknown as StorageAccessible;
  }
}
