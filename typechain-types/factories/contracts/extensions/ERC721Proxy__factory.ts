/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721Proxy,
  ERC721ProxyInterface,
} from "../../../contracts/extensions/ERC721Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_immutableOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721ProxyBadSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "IOAccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "IMMUTABLE_OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
    ],
    name: "func_60iHVgK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461006f57601f61024638819003918201601f19168301916001600160401b038311848410176100745780849260209460405283398101031261006f57516001600160a01b038116810361006f576080526040516101bb908161008b8239608051818181604c015260c60152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816323b872dd1461007e575063f3d1372f1461003757600080fd5b3461007b578060031936011261007b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b9050346101815760a0366003190112610181576001600160a01b03906004358281169081900361017d57602435918383168093036101795760843593808516809503610175577f00000000000000000000000000000000000000000000000000000000000000001633036101665750908391833b15610162576064908360405195869485936323b872dd60e01b855260048501526024840152833560448401525af180156101575761012e575080f35b67ffffffffffffffff81116101435760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8280fd5b63497131ed60e01b8152600490fd5b8580fd5b8480fd5b8380fd5b5080fdfea2646970667358221220f45b1ca8b6d93060d51edf26fd0cf2a9ef87b2ddba012f5ce05bc2a8227033cb64736f6c63430008170033";

type ERC721ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Proxy__factory extends ContractFactory {
  constructor(...args: ERC721ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _immutableOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_immutableOwner, overrides || {});
  }
  override deploy(
    _immutableOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_immutableOwner, overrides || {}) as Promise<
      ERC721Proxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Proxy__factory {
    return super.connect(runner) as ERC721Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ProxyInterface {
    return new Interface(_abi) as ERC721ProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Proxy {
    return new Contract(address, _abi, runner) as unknown as ERC721Proxy;
  }
}
