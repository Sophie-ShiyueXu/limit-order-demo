/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SeriesEpochManager,
  SeriesEpochManagerInterface,
} from "../../../contracts/helpers/SeriesEpochManager";

const _abi = [
  {
    inputs: [],
    name: "AdvanceEpochFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "series",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEpoch",
        type: "uint256",
      },
    ],
    name: "EpochIncreased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "advanceEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
    ],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "series",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "makerEpoch",
        type: "uint256",
      },
    ],
    name: "epochEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
    ],
    name: "increaseEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761027b908161001c8239f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081630d2c7c161461016b57508063c3cf8043146100f3578063ce3d710a146100b05763fcea9e4e1461004e57600080fd5b346100ac57806003193601126100ac5761006661022f565b6024356001600160601b03811681036100a8576001600160a01b0390911660a09190911b6001600160a01b031916178252602082815291819020549051908152f35b8380fd5b5080fd5b50346100ac5760603660031901126100ac576020916100cd61022f565b6001600160a01b031660243560a01b178152808352819020549051604435919091148152f35b50346100ac5760203660031901126100ac577f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf809939661012e610214565b916001600160601b0360a01b8360a01b16331784528360205280842060018154018091556001600160601b0382519416845260208401523392a280f35b91905034610210578060031936011261021057610186610214565b916024359081158015610206575b6101f75750907f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf8099396916001600160601b0360a01b8460a01b163317855284602052818520908154018091556001600160601b0382519416845260208401523392a280f35b63555fbbbf60e01b8152600490fd5b5060ff8211610194565b8280fd5b600435906001600160601b038216820361022a57565b600080fd5b600435906001600160a01b038216820361022a5756fea2646970667358221220f5ca9951e3947bbcb4048c74b0e60f1b6607ff0d07e38623331085f16fc7251164736f6c63430008170033";

type SeriesEpochManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeriesEpochManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeriesEpochManager__factory extends ContractFactory {
  constructor(...args: SeriesEpochManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SeriesEpochManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SeriesEpochManager__factory {
    return super.connect(runner) as SeriesEpochManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeriesEpochManagerInterface {
    return new Interface(_abi) as SeriesEpochManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SeriesEpochManager {
    return new Contract(address, _abi, runner) as unknown as SeriesEpochManager;
  }
}
