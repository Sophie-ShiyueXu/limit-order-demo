/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  WrappedTokenMock,
  WrappedTokenMockInterface,
} from "../../../contracts/mocks/WrappedTokenMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040818152346200048357620019cd803803809162000022828662000488565b84398201918181840312620004835780516001600160401b03939084811162000483578162000053918401620004d1565b916020918282015186811162000483576200006f9201620004d1565b93835191848301838110838211176200038e57855260019283815281810193603160f81b855285518481116200038e5760038054918383811c9316801562000478575b868410146200046257601f9283811162000417575b508086848211600114620003b057600091620003a4575b5060001982841b1c191690841b1781555b8951918683116200038e5760049a8b548581811c9116801562000383575b888210146200036e5782811162000323575b5086918411600114620002b857938394918492600095620002ac575b50501b92600019911b1c19161787555b62000156856200052c565b936101209485526200016882620006d1565b95610140968752838151910120918260e05251902096610100978089524660a0528751938401927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528885015260608401524660808401523060a084015260a0835260c083019383851090851117620002975750828652815190206080523060c05233156200028057505060088054336001600160a01b0319821681179092559351936001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36111a4938462000829853960805184610ce4015260a05184610db0015260c05184610cae015260e05184610d3301525183610d59015251826104c1015251816104eb0152f35b631e4fbdf760e01b8252600060c490910152602490fd5b604190634e487b7160e01b6000525260246000fd5b0151935038806200013b565b9190601f198416928c60005284886000209460005b8a898383106200030b5750505010620002f0575b50505050811b0187556200014b565b01519060f884600019921b161c1916905538808080620002e1565b868601518955909701969485019488935001620002cd565b8c600052876000208380870160051c8201928a881062000364575b0160051c019086905b828110620003575750506200011f565b6000815501869062000347565b925081926200033e565b60228d634e487b7160e01b6000525260246000fd5b90607f16906200010d565b634e487b7160e01b600052604160045260246000fd5b905089015138620000de565b60008481528881208794509190601f198416908a8e5b838310620003ff575050508311620003e6575b5050811b018155620000ef565b8b015160001983861b60f8161c191690553880620003d9565b840151855589969094019392830192018a8e620003c6565b82600052866000208480840160051c82019289851062000458575b0160051c019085905b8281106200044b575050620000c7565b600081550185906200043b565b9250819262000432565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000b2565b600080fd5b601f909101601f19168101906001600160401b038211908210176200038e57604052565b60005b838110620004c05750506000910152565b8181015183820152602001620004af565b81601f82011215620004835780516001600160401b0381116200038e576040519262000508601f8301601f19166020018562000488565b818452602082840101116200048357620005299160208085019101620004ac565b90565b80516020919082811015620005ac575090601f8251116200056a57808251920151908083106200055b57501790565b82600019910360031b1b161790565b6044906200059e9260405193849263305a27a960e01b845280600485015282519283918260248701528686019101620004ac565b601f01601f19168101030190fd5b6001600160401b0381116200038e576005928354926001938481811c91168015620006c6575b838210146200046257601f81116200068f575b5081601f841160011462000625575092829391839260009462000619575b50501b916000199060031b1c191617905560ff90565b01519250388062000603565b919083601f1981168760005284600020946000905b888383106200067457505050106200065a575b505050811b01905560ff90565b015160001960f88460031b161c191690553880806200064d565b8587015188559096019594850194879350908101906200063a565b8560005284601f846000209201871c820191601f8601881c015b828110620006b9575050620005e5565b60008155018590620006a9565b90607f1690620005d2565b805160209081811015620006fe5750601f8251116200056a57808251920151908083106200055b57501790565b906001600160401b0382116200038e57600654926001938481811c911680156200081d575b838210146200046257601f8111620007e3575b5081601f84116001146200077757509282939183926000946200076b575b50501b916000199060031b1c19161760065560ff90565b01519250388062000754565b919083601f198116600660005284600020946000905b88838310620007c85750505010620007ae575b505050811b0160065560ff90565b015160001960f88460031b161c19169055388080620007a0565b8587015188559096019594850194879350908101906200078d565b600660005284601f84600020920160051c820191601f860160051c015b8281106200081057505062000736565b6000815501859062000800565b90607f16906200072356fe60806040818152600480361015610029575b505050361561001f57600080fd5b610027610b31565b005b600092833560e01c90816306fdde031461095a57508063095ea7b31461093057806318160ddd1461091157806323b872dd1461081e5780632e1a7d4d146106f0578063313ce567146106d45780633408e470146106b95780633644e5151461069557806370a082311461065e578063715018a6146106015780637ecebe00146105c957806384b0196e146104aa5780638da5cb5b1461048157806395d89b4114610392578063a9059cbb14610361578063d0e30db01461034a578063d505accf146101e2578063dd62ed3e146101955763f2fde38b0361001157346101915760203660031901126101915761011c610a72565b90610125610dd6565b6001600160a01b0391821692831561017b575050600854826bffffffffffffffffffffffff60a01b821617600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101de57806003193601126101de57806020926101b3610a72565b6101bb610a8d565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b508290346101de5760e03660031901126101de576101fe610a72565b610206610a8d565b906044359260643560843560ff811681036103465781421161032f5760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff82111761031c578b525190206102ea916102e1916102bb610cab565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611059565b909291926110e9565b1681810361030157866102fe878787610e02565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b875163313c898160e11b8152808401839052602490fd5b8680fd5b838060031936011261035e576102fe610b31565b80fd5b5050346101de57806003193601126101de5760209061038b610381610a72565b6024359033610be6565b5160018152f35b50903461019157826003193601126101915780518381949084546103b581610aa3565b91828552602096600192886001821691826000146104575750506001146103fc575b85886103f8896103e9848a0385610b0f565b51928284938452830190610a32565b0390f35b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061043f57505050820101816103e96103f8386103d7565b8054848a018601528895508794909301928101610425565b60ff19168882015294151560051b870190940194508593506103e992506103f891503890506103d7565b5050346101de57816003193601126101de5760085490516001600160a01b039091168152602090f35b5090346101915782600319360112610191576104e57f0000000000000000000000000000000000000000000000000000000000000000610e95565b9261050f7f0000000000000000000000000000000000000000000000000000000000000000610f99565b90825192602092602085019585871067ffffffffffffffff8811176105b6575092602061056c83889661055f998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610a32565b91898303908a0152610a32565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061059f57505050500390f35b835185528695509381019392810192600101610590565b634e487b7160e01b845260419052602483fd5b5050346101de5760203660031901126101de5760209181906001600160a01b036105f1610a72565b1681526007845220549051908152f35b833461035e578060031936011261035e5761061a610dd6565b600880546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101de5760203660031901126101de5760209181906001600160a01b03610686610a72565b16815280845220549051908152f35b5050346101de57816003193601126101de576020906106b2610cab565b9051908152f35b5050346101de57816003193601126101de5760209051468152f35b5050346101de57816003193601126101de576020905160128152f35b50346101915760208060031936011261081a5781359133855284825282848620541061080c5733156107f55733855284825283852054908382106107ca57508290338652858352038385205581600254036002558383518381527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833392a383808380156107c0575b8280929181923390f1156107b4577f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659192519283523392a280f35b505051903d90823e3d90fd5b6108fc9150610779565b845163391434e360e21b81523391810191825260208201929092526040810184905281906060010390fd5b8351634b637e8f60e11b8152908101859052602490fd5b835163569d45cf60e11b8152fd5b8380fd5b50823461035e57606036600319011261035e57610839610a72565b610841610a8d565b916044359360018060a01b03831680835260016020528683203384526020528683205491600019830361087d575b60208861038b898989610be6565b8683106108e55781156108ce5733156108b75750825260016020908152868320338452815291869020908590039055829061038b8761086f565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101de57816003193601126101de576020906002549051908152f35b5050346101de57806003193601126101de5760209061038b610950610a72565b6024359033610e02565b8484346101de57816003193601126101de57828260035461097a81610aa3565b9081845260209560019187600182169182600014610a0b5750506001146109af575b5050506103f892916103e9910385610b0f565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106109f357505050820101816103e96103f861099c565b8054848a0186015288955087949093019281016109da565b60ff19168782015293151560051b860190930193508492506103e991506103f8905061099c565b919082519283825260005b848110610a5e575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a3d565b600435906001600160a01b0382168203610a8857565b600080fd5b602435906001600160a01b0382168203610a8857565b90600182811c92168015610ad3575b6020831014610abd57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ab2565b6040810190811067ffffffffffffffff821117610af957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610af957604052565b3315610bcd57600254348101809111610bb757600255336000526000602052604060002034815401905560405134815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260006004820152602490fd5b916001600160a01b03808416928315610c925716928315610bcd5760009083825281602052604082205490838210610c60575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b604051634b637e8f60e11b815260006004820152602490fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610dad575b15610d06577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610af95760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610cdd565b6008546001600160a01b03163303610dea57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b03908116918215610e7c5716918215610e635760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60ff8114610ed35760ff811690601f8211610ec15760405191610eb783610add565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000610ee683610aa3565b80835292602090600190818116908115610f755750600114610f14575b5050610f1192500382610b0f565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b828410610f5d5750610f119450505081016020013880610f03565b85548785018301529485019486945092810192610f42565b91505060209250610f1194915060ff191682840152151560051b8201013880610f03565b60ff8114610fbb5760ff811690601f8211610ec15760405191610eb783610add565b50604051600654816000610fce83610aa3565b80835292602090600190818116908115610f755750600114610ff8575050610f1192500382610b0f565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b8284106110415750610f119450505081016020013880610f03565b85548785018301529485019486945092810192611026565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116110dd57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156110d15780516001600160a01b038116156110c857918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561115857806110fb575050565b600181036111155760405163f645eedf60e01b8152600490fd5b600281036111365760405163fce698f760e01b815260048101839052602490fd5b6003146111405750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f8d30f8893e58430d1f50c44c5057789ea326c71d3b8acda47155f91db0b4c6764736f6c63430008170033";

type WrappedTokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedTokenMock__factory extends ContractFactory {
  constructor(...args: WrappedTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      WrappedTokenMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WrappedTokenMock__factory {
    return super.connect(runner) as WrappedTokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenMockInterface {
    return new Interface(_abi) as WrappedTokenMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WrappedTokenMock {
    return new Contract(address, _abi, runner) as unknown as WrappedTokenMock;
  }
}
