/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MakerContract,
  MakerContractInterface,
} from "../../../contracts/mocks/MakerContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocol",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "MalformedSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101e06040818152346200061f57620016dd803803809162000022828662000640565b843982019160c0818403126200061f578051916001600160a01b03808416918285036200061f576020906200005982860162000664565b916200006782870162000664565b6060870151608088015190979196916001600160401b03918281116200061f578b6200009591830162000679565b9160a0820151918183116200061f57600d60fa1b9c8693620000b8920162000679565b928651620000c68162000624565b601a81527f31696e6368204c696d6974204f726465722050726f746f636f6c00000000000084820152875190620000fd8262000624565b6001948286809452019e8f528781519101209d208c610120528d60c0528060e0524660a0528751907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9e8f898401528983015260608201524660808201528560a082015260a0815260c08101818110848211176200051f5788528681519101206080526101009c8d528051908282116200051f576003918254918583811c9316801562000614575b89841014620005fe578190601f93848111620005a8575b508990848311600114620005415760009262000535575b505060001982851b1c191690851b1782555b84519283116200051f5760049485548581811c9116801562000514575b89821014620004ff57828111620004b4575b508791841160011462000449579383949184926000956200043d575b50501b92600019911b1c19161781555b61014098895261016094808652610180968888526101a0988a8a52671bc16d674ec800009a808c029b8c0481036200042857670de0b6b3a76400009081018091116200042857801562000413576101c09b048b5286519263095ea7b360e01b9384815286868201528781604481600088811997886024850152165af18015620004085792600092604495928a989795620003e6575b508a51988997889687528601526024850152165af18015620003db57620003a6575b50505194610fd396876200070a883960805187610e00015260a05187610dda015260c05187610e4f015260e05187610e7501525186610e2c01526101205186610ea8015251856103430152518481816104410152818161060201528181610aa90152610c620152518381816103d60152818161075e015281816107ad01528181610c280152610daf0152518281816101d601526106dd01525181818161013c01528181610b4d0152610ca00152f35b81620003ca92903d10620003d3575b620003c1818362000640565b810190620006ef565b503880620002f7565b503d620003b5565b83513d6000823e3d90fd5b6200040090893d8b11620003d357620003c1818362000640565b5038620002d5565b89513d6000823e3d90fd5b601285634e487b7160e01b6000525260246000fd5b601185634e487b7160e01b6000525260246000fd5b01519350388062000230565b9190601f198416928660005284896000209460005b8b898383106200049c575050501062000481575b50505050811b01815562000240565b01519060f884600019921b161c191690553880808062000472565b8686015189559097019694850194889350016200045e565b86600052886000208380870160051c8201928b8810620004f5575b0160051c019086905b828110620004e857505062000214565b60008155018690620004d8565b92508192620004cf565b602287634e487b7160e01b6000525260246000fd5b90607f169062000202565b634e487b7160e01b600052604160045260246000fd5b015190503880620001d3565b90879350601f19831691866000528b6000209260005b8d82821062000591575050841162000578575b505050811b018255620001e5565b015160001983871b60f8161c191690553880806200056a565b8385015186558b9790950194938401930162000557565b90915084600052896000208480850160051c8201928c8610620005f4575b918991869594930160051c01915b828110620005e4575050620001bc565b60008155859450899101620005d4565b92508192620005c6565b634e487b7160e01b600052602260045260246000fd5b92607f1692620001a5565b600080fd5b604081019081106001600160401b038211176200051f57604052565b601f909101601f19168101906001600160401b038211908210176200051f57604052565b51906001600160a01b03821682036200061f57565b919080601f840112156200061f5782516001600160401b0381116200051f5760209060405192620006b483601f19601f850116018562000640565b8184528282870101116200061f5760005b818110620006db57508260009394955001015290565b8581018301518482018401528201620006c5565b908160209103126200061f575180151581036200061f579056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461089557508163095ea7b3146107eb5781631626ba7e1461059f57816318160ddd1461058057816323b872dd1461048c578163313ce56714610470578163443ec74d1461042c57816347e7ef24146104055781635ee04d78146103c15781636766efbe146103a957816370a082311461037257816391b9b8271461032e57816395d89b411461022957508063a9059cbb146101f9578063c57981b5146101bf578063c8820f6c146101a7578063dd62ed3e1461015f578063ebffa67b146101255763f3fef3a3146100f657600080fd5b346101215736600319011261011e5761011b6101106109d3565b339060243590610a99565b80f35b80fd5b5080fd5b5034610121578160031936011261012157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346101215780600319360112610121578060209261017c6109d3565b6101846109ee565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b823461011e5761011b6101b936610a04565b91610c53565b5034610121578160031936011261012157602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346101215780600319360112610121576020906102226102186109d3565b6024359033610ef1565b5160018152f35b83833461012157816003193601126101215780519180938054916001908360011c9260018516948515610324575b6020958686108114610311578589529081156102ed5750600114610295575b6102918787610287828c0383610a38565b519182918261098a565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102da57505050826102919461028792820101948680610276565b80548685018801529286019281016102bc565b60ff19168887015250505050151560051b8301019250610287826102918680610276565b634e487b7160e01b845260228352602484fd5b93607f1693610257565b505034610121578160031936011261012157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101215760203660031901126101215760209181906001600160a01b0361039a6109d3565b16815280845220549051908152f35b833461011e5761011b6103bb36610a04565b91610a99565b505034610121578160031936011261012157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101215736600319011261011e5761011b6104216109d3565b339060243590610c53565b505034610121578160031936011261012157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101215781600319360112610121576020905160068152f35b9050823461011e57606036600319011261011e576104a86109d3565b6104b06109ee565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036104ec575b602088610222898989610ef1565b86831061055457811561053d57331561052657508252600160209081528683203384528152918690209085900390558290610222876104de565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101215781600319360112610121576020906002549051908152f35b82843461011e578160031936011261011e5767ffffffffffffffff6024358181116107e757366023820112156107e757808501359182116107e75736602483830101116107e7576101008092036107d75760848101356001600160a01b039081167f000000000000000000000000000000000000000000000000000000000000000082168181148015969392906107a4575b86610756575b5050508315610741575b83156106d5575b508215610673575b50506106665751630b135d3f60e11b8152602090f35b5163fd1ee34960e01b8152fd5b610120919250610681610dd7565b9260248551927f3af21ec5a20011b88d3b7b4ed7c806cef05a5980cf34974bcd53566a131f7e4c84520160208301372082519161190160f01b83526002830152602282015260428335912014158380610650565b9092506107067f000000000000000000000000000000000000000000000000000000000000000060c4850135610a70565b670de0b6b3a764000060e48501358181029391811591850414171561072e5750119185610648565b634e487b7160e01b815260118752602490fd5b610104820135600160f91b1615159350610641565b9091809396507f0000000000000000000000000000000000000000000000000000000000000000161491821592610793575b505092868080610637565b60a484013516141590508680610788565b60a485013583167f0000000000000000000000000000000000000000000000000000000000000000841614159650610631565b50505051632ad0f0b760e11b8152fd5b8280fd5b9050346107e757816003193601126107e7576108056109d3565b60243590331561087e576001600160a01b031691821561086757508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b92915034610986578360031936011261098657600354600181811c918690828116801561097c575b6020958686108214610969575084885290811561094757506001146108ee575b6102918686610287828b0383610a38565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106109345750505082610291946102879282010194386108dd565b8054868501880152928601928101610917565b60ff191687860152505050151560051b830101925061028782610291386108dd565b634e487b7160e01b845260229052602483fd5b93607f16936108bd565b8380fd5b6020808252825181830181905290939260005b8281106109bf57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161099d565b600435906001600160a01b03821682036109e957565b600080fd5b602435906001600160a01b03821682036109e957565b60609060031901126109e9576001600160a01b0360043581811681036109e957916024359160443590811681036109e95790565b90601f8019910116810190811067ffffffffffffffff821117610a5a57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610a8357565b634e487b7160e01b600052601160045260246000fd5b9091906001600160a01b038082167f000000000000000000000000000000000000000000000000000000000000000082168114159182610c26575b5050610c14573315610bfb576000913383528260205260409384842054818110610bd457602092670de0b6b3a7640000610b72848895604495338852878952038a8720558060025403600255858a518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893392a37f000000000000000000000000000000000000000000000000000000000000000090610a70565b0487519163a9059cbb60e01b83526004830152602482015282855af19182610baf575b505015610b9f5750565b5163fb7f507960e01b8152600490fd5b9091503d15610bcb57600191505114601f3d11165b3880610b95565b503b1515610bc4565b855163391434e360e21b815233600482015260248101919091526044810191909152606490fd5b604051634b637e8f60e11b815260006004820152602490fd5b604051630e1478bb60e41b8152600490fd5b7f000000000000000000000000000000000000000000000000000000000000000016141590503880610ad4565b90916001600160a01b038083167f000000000000000000000000000000000000000000000000000000000000000082168114159081610daa575b50610c1457670de0b6b3a7640000610cc57f000000000000000000000000000000000000000000000000000000000000000086610a70565b049116908115610d9157600254818101809111610a83577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9460209384936064936002556000978895869284845283825260408420818154019055604051908152a3604051906323b872dd60e01b8252336004830152306024830152604482015282855af19182610d6c575b505015610d5a57565b60405163f405907160e01b8152600490fd5b9091503d15610d8857600191505114601f3d11165b3880610d51565b503b1515610d81565b60405163ec442f0560e01b815260006004820152602490fd5b9050817f000000000000000000000000000000000000000000000000000000000000000016141538610c8d565b467f000000000000000000000000000000000000000000000000000000000000000003610e22577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f0000000000000000000000000000000000000000000000000000000000000000606082015246608082015260018060a01b037f00000000000000000000000000000000000000000000000000000000000000001660a082015260a0815260c0810181811067ffffffffffffffff821117610a5a5760405251902090565b916001600160a01b03808416928315610bfb5716928315610d915760009083825281602052604082205490838210610f6b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fdfea26469706673582212200e15ea91ff5242a27d32ec73126726f26f68e333f6dc764b8db6b86d08f3376664736f6c63430008170033";

type MakerContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MakerContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MakerContract__factory extends ContractFactory {
  constructor(...args: MakerContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _protocol: AddressLike,
    _token0: AddressLike,
    _token1: AddressLike,
    _fee: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _protocol,
      _token0,
      _token1,
      _fee,
      name,
      symbol,
      overrides || {}
    );
  }
  override deploy(
    _protocol: AddressLike,
    _token0: AddressLike,
    _token1: AddressLike,
    _fee: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _protocol,
      _token0,
      _token1,
      _fee,
      name,
      symbol,
      overrides || {}
    ) as Promise<
      MakerContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MakerContract__factory {
    return super.connect(runner) as MakerContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MakerContractInterface {
    return new Interface(_abi) as MakerContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MakerContract {
    return new Contract(address, _abi, runner) as unknown as MakerContract;
  }
}
